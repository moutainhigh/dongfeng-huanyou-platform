server.port=6086

spring.freemarker.check-template-location=false

# datasource
spring.datasource.url=jdbc:mysql://10.30.50.153:3306/product_manage_0724
spring.datasource.username=dongfeng153
spring.datasource.password=6DuQBNlfa6dTwaY2gQQd8rPk
spring.datasource.driverClassName=com.mysql.jdbc.Driver
spring.datasource.tomcat.max-active=200
spring.datasource.tomcat.max-idle=8
spring.datasource.tomcat.min-idle=8
spring.datasource.tomcat.initial-size=10
spring.datasource.tomcat.maxWait=60000
spring.datasource.tomcat.time-between-eviction-runs-millis=60000
spring.datasource.tomcat.min-evictable-idle-time-millis=300000
spring.datasource.tomcat.validation-query=SELECT 1;
spring.datasource.tomcat.test-while-idle=true
spring.datasource.tomcat.test-on-borrow=false
spring.datasource.tomcat.test-on-return=false

#jpa
spring.jpa.database=MYSQL
spring.jpa.database-platform=org.hibernate.dialect.MySQL5Dialect
spring.jpa.show-sql=true
spring.jta.bitronix.datasource.allow-local-transactions=true
spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.DefaultNamingStrategy
spring.jpa.hibernate.ddl-auto=validate


#security
security.basic.enabled=false

# redis
spring.redis.database=8
spring.redis.host=10.30.50.151
spring.redis.password=
spring.redis.port=6399
spring.redis.pool.max-idle=8
spring.redis.pool.min-idle=0
spring.redis.pool.max-active=8
spring.redis.pool.max-wait=-1

#consumer config
#opentsp.kafka.bootstrap.servers=zkpsy1:9092,zkpsy2:9092,zkpsy3:9092
opentsp.kafka.bootstrap.servers=10.30.10.11:19092,10.30.10.12:19092,10.30.10.13:19092
opentsp.kafka.consumer.concurrency.size=9
#opentsp.kafka.consumer.listener.topics=qq_poscan_pkt,rpposdone,qq_online_pkt
opentsp.kafka.consumer.listener.topics=qq_poscan_pkt,rpposdone
opentsp.kafka.consumer.session.timeout.ms=20000
opentsp.kafka.producer.request.timeout.ms=60000
opentsp.kafka.heartbeat.interval.ms=10000
opentsp.kafka.max.partition.fetch.bytes=524288
opentsp.kafka.consumer.enable.auto.commit=false
opentsp.kafka.consumer.auto.commit.interval.ms=500
opentsp.kafka.consumer.client.id=dongfeng-poscan-core
opentsp.kafka.consumer.group.id=dongfeng-poscan-core
opentsp.kafka.consumer.key.serializer.class=org.apache.kafka.common.serialization.StringDeserializer
opentsp.kafka.consumer.value.serializer.class=com.navinfo.opentsp.dongfeng.kafka.configuration.kafka.serializers.KafkaJsonDeserializer

# \u670D\u52A1\u6CE8\u518C\u53D1\u73B0\u4E2D\u5FC3\u914D\u7F6E
eureka.client.registerWithEureka = true
eureka.client.fetchRegistry = true
eureka.client.serviceUrl.defaultZone=http://10.30.50.152:11112/eureka/
eureka.instance.preferIpAddress = false
# \u670D\u52A1\u540D\u79F0
spring.application.name=kafka
controller.prefix=/dongfeng/${spring.application.name}

#log\u7B49\u7EA7
logging.level.com: INFO

feign.hystrix.enabled=false
ribbon.MaxConnectionsPerHost=2000
ribbon.MaxTotalConnections=20000
ribbon.ConnectTimeout=30000
ribbon.ReadTimeout=30000
ribbon.PoolMaxThreads=2000

#3002.use.pipelined
3002.use.pipelined=false
#3007 out_of_service
stop.3007.server=false
#3528 out_of_service
stop.3528.server=true
#alarm out_of_service
3002.stop.alarm.server=true

# \u8865\u4F20\u5B9A\u4F4D\u4FE1\u606F\u65F6\u95F4\u6807\u8BB0\uFF0C\u5355\u4F4D\uFF1As
history.location.msg.time.sign=60000