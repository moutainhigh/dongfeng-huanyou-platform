// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: core/proto/common/java/TireTemperatureAddition.proto

package com.navinfo.opentsp.dongfeng.report.service.oil;

public final class LCTireTemperatureAddition {
  private LCTireTemperatureAddition() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface TireTemperatureAdditionOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional int32 alarmSign = 1;
    boolean hasAlarmSign();
    int getAlarmSign();
    
    // optional int32 status = 2;
    boolean hasStatus();
    int getStatus();
    
    // optional int32 latitude = 3;
    boolean hasLatitude();
    int getLatitude();
    
    // optional int32 longitude = 4;
    boolean hasLongitude();
    int getLongitude();
    
    // optional int32 height = 5;
    boolean hasHeight();
    int getHeight();
    
    // optional int32 direction = 6;
    boolean hasDirection();
    int getDirection();
    
    // optional int64 gpsTime = 7;
    boolean hasGpsTime();
    long getGpsTime();
    
    // optional int32 gpsSpeed = 8;
    boolean hasGpsSpeed();
    int getGpsSpeed();
    
    // repeated .TireConditionItem tireConditionItem = 9;
    java.util.List<TireConditionItem>
        getTireConditionItemList();
    TireConditionItem getTireConditionItem(int index);
    int getTireConditionItemCount();
    java.util.List<? extends TireConditionItemOrBuilder>
        getTireConditionItemOrBuilderList();
    TireConditionItemOrBuilder getTireConditionItemOrBuilder(
            int index);
  }
  public static final class TireTemperatureAddition extends
      com.google.protobuf.GeneratedMessage
      implements TireTemperatureAdditionOrBuilder {
    // Use TireTemperatureAddition.newBuilder() to construct.
    private TireTemperatureAddition(Builder builder) {
      super(builder);
    }
    private TireTemperatureAddition(boolean noInit) {}
    
    private static final TireTemperatureAddition defaultInstance;
    public static TireTemperatureAddition getDefaultInstance() {
      return defaultInstance;
    }
    
    public TireTemperatureAddition getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return LCTireTemperatureAddition.internal_static_TireTemperatureAddition_descriptor;
    }
    
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return LCTireTemperatureAddition.internal_static_TireTemperatureAddition_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional int32 alarmSign = 1;
    public static final int ALARMSIGN_FIELD_NUMBER = 1;
    private int alarmSign_;
    public boolean hasAlarmSign() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getAlarmSign() {
      return alarmSign_;
    }
    
    // optional int32 status = 2;
    public static final int STATUS_FIELD_NUMBER = 2;
    private int status_;
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getStatus() {
      return status_;
    }
    
    // optional int32 latitude = 3;
    public static final int LATITUDE_FIELD_NUMBER = 3;
    private int latitude_;
    public boolean hasLatitude() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getLatitude() {
      return latitude_;
    }
    
    // optional int32 longitude = 4;
    public static final int LONGITUDE_FIELD_NUMBER = 4;
    private int longitude_;
    public boolean hasLongitude() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getLongitude() {
      return longitude_;
    }
    
    // optional int32 height = 5;
    public static final int HEIGHT_FIELD_NUMBER = 5;
    private int height_;
    public boolean hasHeight() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public int getHeight() {
      return height_;
    }
    
    // optional int32 direction = 6;
    public static final int DIRECTION_FIELD_NUMBER = 6;
    private int direction_;
    public boolean hasDirection() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public int getDirection() {
      return direction_;
    }
    
    // optional int64 gpsTime = 7;
    public static final int GPSTIME_FIELD_NUMBER = 7;
    private long gpsTime_;
    public boolean hasGpsTime() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public long getGpsTime() {
      return gpsTime_;
    }
    
    // optional int32 gpsSpeed = 8;
    public static final int GPSSPEED_FIELD_NUMBER = 8;
    private int gpsSpeed_;
    public boolean hasGpsSpeed() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public int getGpsSpeed() {
      return gpsSpeed_;
    }
    
    // repeated .TireConditionItem tireConditionItem = 9;
    public static final int TIRECONDITIONITEM_FIELD_NUMBER = 9;
    private java.util.List<TireConditionItem> tireConditionItem_;
    public java.util.List<TireConditionItem> getTireConditionItemList() {
      return tireConditionItem_;
    }
    public java.util.List<? extends TireConditionItemOrBuilder>
        getTireConditionItemOrBuilderList() {
      return tireConditionItem_;
    }
    public int getTireConditionItemCount() {
      return tireConditionItem_.size();
    }
    public TireConditionItem getTireConditionItem(int index) {
      return tireConditionItem_.get(index);
    }
    public TireConditionItemOrBuilder getTireConditionItemOrBuilder(
        int index) {
      return tireConditionItem_.get(index);
    }
    
    private void initFields() {
      alarmSign_ = 0;
      status_ = 0;
      latitude_ = 0;
      longitude_ = 0;
      height_ = 0;
      direction_ = 0;
      gpsTime_ = 0L;
      gpsSpeed_ = 0;
      tireConditionItem_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, alarmSign_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, status_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, latitude_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, longitude_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, height_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, direction_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt64(7, gpsTime_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, gpsSpeed_);
      }
      for (int i = 0; i < tireConditionItem_.size(); i++) {
        output.writeMessage(9, tireConditionItem_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, alarmSign_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, status_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, latitude_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, longitude_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, height_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, direction_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(7, gpsTime_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, gpsSpeed_);
      }
      for (int i = 0; i < tireConditionItem_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, tireConditionItem_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static TireTemperatureAddition parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static TireTemperatureAddition parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static TireTemperatureAddition parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static TireTemperatureAddition parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static TireTemperatureAddition parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static TireTemperatureAddition parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static TireTemperatureAddition parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static TireTemperatureAddition parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static TireTemperatureAddition parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static TireTemperatureAddition parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(TireTemperatureAddition prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements TireTemperatureAdditionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return LCTireTemperatureAddition.internal_static_TireTemperatureAddition_descriptor;
      }
      
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return LCTireTemperatureAddition.internal_static_TireTemperatureAddition_fieldAccessorTable;
      }
      
      // Construct using com.navinfo.opentsp.platform.location.protocol.common.LCTireTemperatureAddition.TireTemperatureAddition.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getTireConditionItemFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        alarmSign_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        status_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        latitude_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        longitude_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        height_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        direction_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        gpsTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000040);
        gpsSpeed_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        if (tireConditionItemBuilder_ == null) {
          tireConditionItem_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
        } else {
          tireConditionItemBuilder_.clear();
        }
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return TireTemperatureAddition.getDescriptor();
      }
      
      public TireTemperatureAddition getDefaultInstanceForType() {
        return TireTemperatureAddition.getDefaultInstance();
      }
      
      public TireTemperatureAddition build() {
        TireTemperatureAddition result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private TireTemperatureAddition buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        TireTemperatureAddition result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public TireTemperatureAddition buildPartial() {
        TireTemperatureAddition result = new TireTemperatureAddition(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.alarmSign_ = alarmSign_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.latitude_ = latitude_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.longitude_ = longitude_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.height_ = height_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.direction_ = direction_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.gpsTime_ = gpsTime_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.gpsSpeed_ = gpsSpeed_;
        if (tireConditionItemBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100)) {
            tireConditionItem_ = java.util.Collections.unmodifiableList(tireConditionItem_);
            bitField0_ = (bitField0_ & ~0x00000100);
          }
          result.tireConditionItem_ = tireConditionItem_;
        } else {
          result.tireConditionItem_ = tireConditionItemBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof TireTemperatureAddition) {
          return mergeFrom((TireTemperatureAddition)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(TireTemperatureAddition other) {
        if (other == TireTemperatureAddition.getDefaultInstance()) return this;
        if (other.hasAlarmSign()) {
          setAlarmSign(other.getAlarmSign());
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasLatitude()) {
          setLatitude(other.getLatitude());
        }
        if (other.hasLongitude()) {
          setLongitude(other.getLongitude());
        }
        if (other.hasHeight()) {
          setHeight(other.getHeight());
        }
        if (other.hasDirection()) {
          setDirection(other.getDirection());
        }
        if (other.hasGpsTime()) {
          setGpsTime(other.getGpsTime());
        }
        if (other.hasGpsSpeed()) {
          setGpsSpeed(other.getGpsSpeed());
        }
        if (tireConditionItemBuilder_ == null) {
          if (!other.tireConditionItem_.isEmpty()) {
            if (tireConditionItem_.isEmpty()) {
              tireConditionItem_ = other.tireConditionItem_;
              bitField0_ = (bitField0_ & ~0x00000100);
            } else {
              ensureTireConditionItemIsMutable();
              tireConditionItem_.addAll(other.tireConditionItem_);
            }
            onChanged();
          }
        } else {
          if (!other.tireConditionItem_.isEmpty()) {
            if (tireConditionItemBuilder_.isEmpty()) {
              tireConditionItemBuilder_.dispose();
              tireConditionItemBuilder_ = null;
              tireConditionItem_ = other.tireConditionItem_;
              bitField0_ = (bitField0_ & ~0x00000100);
              tireConditionItemBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getTireConditionItemFieldBuilder() : null;
            } else {
              tireConditionItemBuilder_.addAllMessages(other.tireConditionItem_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              alarmSign_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              status_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              latitude_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              longitude_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              height_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              direction_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              gpsTime_ = input.readInt64();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              gpsSpeed_ = input.readInt32();
              break;
            }
            case 74: {
              TireConditionItem.Builder subBuilder = TireConditionItem.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addTireConditionItem(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional int32 alarmSign = 1;
      private int alarmSign_ ;
      public boolean hasAlarmSign() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getAlarmSign() {
        return alarmSign_;
      }
      public Builder setAlarmSign(int value) {
        bitField0_ |= 0x00000001;
        alarmSign_ = value;
        onChanged();
        return this;
      }
      public Builder clearAlarmSign() {
        bitField0_ = (bitField0_ & ~0x00000001);
        alarmSign_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 status = 2;
      private int status_ ;
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getStatus() {
        return status_;
      }
      public Builder setStatus(int value) {
        bitField0_ |= 0x00000002;
        status_ = value;
        onChanged();
        return this;
      }
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000002);
        status_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 latitude = 3;
      private int latitude_ ;
      public boolean hasLatitude() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getLatitude() {
        return latitude_;
      }
      public Builder setLatitude(int value) {
        bitField0_ |= 0x00000004;
        latitude_ = value;
        onChanged();
        return this;
      }
      public Builder clearLatitude() {
        bitField0_ = (bitField0_ & ~0x00000004);
        latitude_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 longitude = 4;
      private int longitude_ ;
      public boolean hasLongitude() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getLongitude() {
        return longitude_;
      }
      public Builder setLongitude(int value) {
        bitField0_ |= 0x00000008;
        longitude_ = value;
        onChanged();
        return this;
      }
      public Builder clearLongitude() {
        bitField0_ = (bitField0_ & ~0x00000008);
        longitude_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 height = 5;
      private int height_ ;
      public boolean hasHeight() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public int getHeight() {
        return height_;
      }
      public Builder setHeight(int value) {
        bitField0_ |= 0x00000010;
        height_ = value;
        onChanged();
        return this;
      }
      public Builder clearHeight() {
        bitField0_ = (bitField0_ & ~0x00000010);
        height_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 direction = 6;
      private int direction_ ;
      public boolean hasDirection() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public int getDirection() {
        return direction_;
      }
      public Builder setDirection(int value) {
        bitField0_ |= 0x00000020;
        direction_ = value;
        onChanged();
        return this;
      }
      public Builder clearDirection() {
        bitField0_ = (bitField0_ & ~0x00000020);
        direction_ = 0;
        onChanged();
        return this;
      }
      
      // optional int64 gpsTime = 7;
      private long gpsTime_ ;
      public boolean hasGpsTime() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public long getGpsTime() {
        return gpsTime_;
      }
      public Builder setGpsTime(long value) {
        bitField0_ |= 0x00000040;
        gpsTime_ = value;
        onChanged();
        return this;
      }
      public Builder clearGpsTime() {
        bitField0_ = (bitField0_ & ~0x00000040);
        gpsTime_ = 0L;
        onChanged();
        return this;
      }
      
      // optional int32 gpsSpeed = 8;
      private int gpsSpeed_ ;
      public boolean hasGpsSpeed() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public int getGpsSpeed() {
        return gpsSpeed_;
      }
      public Builder setGpsSpeed(int value) {
        bitField0_ |= 0x00000080;
        gpsSpeed_ = value;
        onChanged();
        return this;
      }
      public Builder clearGpsSpeed() {
        bitField0_ = (bitField0_ & ~0x00000080);
        gpsSpeed_ = 0;
        onChanged();
        return this;
      }
      
      // repeated .TireConditionItem tireConditionItem = 9;
      private java.util.List<TireConditionItem> tireConditionItem_ =
        java.util.Collections.emptyList();
      private void ensureTireConditionItemIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          tireConditionItem_ = new java.util.ArrayList<TireConditionItem>(tireConditionItem_);
          bitField0_ |= 0x00000100;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          TireConditionItem, TireConditionItem.Builder, TireConditionItemOrBuilder> tireConditionItemBuilder_;
      
      public java.util.List<TireConditionItem> getTireConditionItemList() {
        if (tireConditionItemBuilder_ == null) {
          return java.util.Collections.unmodifiableList(tireConditionItem_);
        } else {
          return tireConditionItemBuilder_.getMessageList();
        }
      }
      public int getTireConditionItemCount() {
        if (tireConditionItemBuilder_ == null) {
          return tireConditionItem_.size();
        } else {
          return tireConditionItemBuilder_.getCount();
        }
      }
      public TireConditionItem getTireConditionItem(int index) {
        if (tireConditionItemBuilder_ == null) {
          return tireConditionItem_.get(index);
        } else {
          return tireConditionItemBuilder_.getMessage(index);
        }
      }
      public Builder setTireConditionItem(
          int index, TireConditionItem value) {
        if (tireConditionItemBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTireConditionItemIsMutable();
          tireConditionItem_.set(index, value);
          onChanged();
        } else {
          tireConditionItemBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setTireConditionItem(
          int index, TireConditionItem.Builder builderForValue) {
        if (tireConditionItemBuilder_ == null) {
          ensureTireConditionItemIsMutable();
          tireConditionItem_.set(index, builderForValue.build());
          onChanged();
        } else {
          tireConditionItemBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addTireConditionItem(TireConditionItem value) {
        if (tireConditionItemBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTireConditionItemIsMutable();
          tireConditionItem_.add(value);
          onChanged();
        } else {
          tireConditionItemBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addTireConditionItem(
          int index, TireConditionItem value) {
        if (tireConditionItemBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTireConditionItemIsMutable();
          tireConditionItem_.add(index, value);
          onChanged();
        } else {
          tireConditionItemBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addTireConditionItem(
          TireConditionItem.Builder builderForValue) {
        if (tireConditionItemBuilder_ == null) {
          ensureTireConditionItemIsMutable();
          tireConditionItem_.add(builderForValue.build());
          onChanged();
        } else {
          tireConditionItemBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addTireConditionItem(
          int index, TireConditionItem.Builder builderForValue) {
        if (tireConditionItemBuilder_ == null) {
          ensureTireConditionItemIsMutable();
          tireConditionItem_.add(index, builderForValue.build());
          onChanged();
        } else {
          tireConditionItemBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllTireConditionItem(
          Iterable<? extends TireConditionItem> values) {
        if (tireConditionItemBuilder_ == null) {
          ensureTireConditionItemIsMutable();
          super.addAll(values, tireConditionItem_);
          onChanged();
        } else {
          tireConditionItemBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearTireConditionItem() {
        if (tireConditionItemBuilder_ == null) {
          tireConditionItem_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
          onChanged();
        } else {
          tireConditionItemBuilder_.clear();
        }
        return this;
      }
      public Builder removeTireConditionItem(int index) {
        if (tireConditionItemBuilder_ == null) {
          ensureTireConditionItemIsMutable();
          tireConditionItem_.remove(index);
          onChanged();
        } else {
          tireConditionItemBuilder_.remove(index);
        }
        return this;
      }
      public TireConditionItem.Builder getTireConditionItemBuilder(
          int index) {
        return getTireConditionItemFieldBuilder().getBuilder(index);
      }
      public TireConditionItemOrBuilder getTireConditionItemOrBuilder(
          int index) {
        if (tireConditionItemBuilder_ == null) {
          return tireConditionItem_.get(index);  } else {
          return tireConditionItemBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends TireConditionItemOrBuilder>
           getTireConditionItemOrBuilderList() {
        if (tireConditionItemBuilder_ != null) {
          return tireConditionItemBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(tireConditionItem_);
        }
      }
      public TireConditionItem.Builder addTireConditionItemBuilder() {
        return getTireConditionItemFieldBuilder().addBuilder(
            TireConditionItem.getDefaultInstance());
      }
      public TireConditionItem.Builder addTireConditionItemBuilder(
          int index) {
        return getTireConditionItemFieldBuilder().addBuilder(
            index, TireConditionItem.getDefaultInstance());
      }
      public java.util.List<TireConditionItem.Builder>
           getTireConditionItemBuilderList() {
        return getTireConditionItemFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          TireConditionItem, TireConditionItem.Builder, TireConditionItemOrBuilder>
          getTireConditionItemFieldBuilder() {
        if (tireConditionItemBuilder_ == null) {
          tireConditionItemBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              TireConditionItem, TireConditionItem.Builder, TireConditionItemOrBuilder>(
                  tireConditionItem_,
                  ((bitField0_ & 0x00000100) == 0x00000100),
                  getParentForChildren(),
                  isClean());
          tireConditionItem_ = null;
        }
        return tireConditionItemBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:TireTemperatureAddition)
    }
    
    static {
      defaultInstance = new TireTemperatureAddition(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:TireTemperatureAddition)
  }
  
  public interface TireConditionItemOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional int32 tireLocation = 1;
    boolean hasTireLocation();
    int getTireLocation();
    
    // optional int32 tireTemperature = 2;
    boolean hasTireTemperature();
    int getTireTemperature();
    
    // optional int32 tirePressure = 3;
    boolean hasTirePressure();
    int getTirePressure();
    
    // optional int32 wuBatteryStatus = 4;
    boolean hasWuBatteryStatus();
    int getWuBatteryStatus();
    
    // optional int32 fastPressureLossStatus = 5;
    boolean hasFastPressureLossStatus();
    int getFastPressureLossStatus();
    
    // optional int32 tcTargetNominalPressure = 6;
    boolean hasTcTargetNominalPressure();
    int getTcTargetNominalPressure();
    
    // optional int32 tyrePressureStatus = 7;
    boolean hasTyrePressureStatus();
    int getTyrePressureStatus();
    
    // optional int32 tyreBurstStatus = 8;
    boolean hasTyreBurstStatus();
    int getTyreBurstStatus();
    
    // optional int32 tyreOverTemperatureStatus = 9;
    boolean hasTyreOverTemperatureStatus();
    int getTyreOverTemperatureStatus();
    
    // optional int32 tyreLockDetectionStatus = 10;
    boolean hasTyreLockDetectionStatus();
    int getTyreLockDetectionStatus();
    
    // optional int32 tfaStatus = 11;
    boolean hasTfaStatus();
    int getTfaStatus();
    
    // optional int32 placeholder1 = 12;
    boolean hasPlaceholder1();
    int getPlaceholder1();
    
    // optional int32 placeholder2 = 13;
    boolean hasPlaceholder2();
    int getPlaceholder2();
  }
  public static final class TireConditionItem extends
      com.google.protobuf.GeneratedMessage
      implements TireConditionItemOrBuilder {
    // Use TireConditionItem.newBuilder() to construct.
    private TireConditionItem(Builder builder) {
      super(builder);
    }
    private TireConditionItem(boolean noInit) {}
    
    private static final TireConditionItem defaultInstance;
    public static TireConditionItem getDefaultInstance() {
      return defaultInstance;
    }
    
    public TireConditionItem getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return LCTireTemperatureAddition.internal_static_TireConditionItem_descriptor;
    }
    
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return LCTireTemperatureAddition.internal_static_TireConditionItem_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional int32 tireLocation = 1;
    public static final int TIRELOCATION_FIELD_NUMBER = 1;
    private int tireLocation_;
    public boolean hasTireLocation() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getTireLocation() {
      return tireLocation_;
    }
    
    // optional int32 tireTemperature = 2;
    public static final int TIRETEMPERATURE_FIELD_NUMBER = 2;
    private int tireTemperature_;
    public boolean hasTireTemperature() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getTireTemperature() {
      return tireTemperature_;
    }
    
    // optional int32 tirePressure = 3;
    public static final int TIREPRESSURE_FIELD_NUMBER = 3;
    private int tirePressure_;
    public boolean hasTirePressure() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getTirePressure() {
      return tirePressure_;
    }
    
    // optional int32 wuBatteryStatus = 4;
    public static final int WUBATTERYSTATUS_FIELD_NUMBER = 4;
    private int wuBatteryStatus_;
    public boolean hasWuBatteryStatus() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getWuBatteryStatus() {
      return wuBatteryStatus_;
    }
    
    // optional int32 fastPressureLossStatus = 5;
    public static final int FASTPRESSURELOSSSTATUS_FIELD_NUMBER = 5;
    private int fastPressureLossStatus_;
    public boolean hasFastPressureLossStatus() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public int getFastPressureLossStatus() {
      return fastPressureLossStatus_;
    }
    
    // optional int32 tcTargetNominalPressure = 6;
    public static final int TCTARGETNOMINALPRESSURE_FIELD_NUMBER = 6;
    private int tcTargetNominalPressure_;
    public boolean hasTcTargetNominalPressure() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public int getTcTargetNominalPressure() {
      return tcTargetNominalPressure_;
    }
    
    // optional int32 tyrePressureStatus = 7;
    public static final int TYREPRESSURESTATUS_FIELD_NUMBER = 7;
    private int tyrePressureStatus_;
    public boolean hasTyrePressureStatus() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public int getTyrePressureStatus() {
      return tyrePressureStatus_;
    }
    
    // optional int32 tyreBurstStatus = 8;
    public static final int TYREBURSTSTATUS_FIELD_NUMBER = 8;
    private int tyreBurstStatus_;
    public boolean hasTyreBurstStatus() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public int getTyreBurstStatus() {
      return tyreBurstStatus_;
    }
    
    // optional int32 tyreOverTemperatureStatus = 9;
    public static final int TYREOVERTEMPERATURESTATUS_FIELD_NUMBER = 9;
    private int tyreOverTemperatureStatus_;
    public boolean hasTyreOverTemperatureStatus() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    public int getTyreOverTemperatureStatus() {
      return tyreOverTemperatureStatus_;
    }
    
    // optional int32 tyreLockDetectionStatus = 10;
    public static final int TYRELOCKDETECTIONSTATUS_FIELD_NUMBER = 10;
    private int tyreLockDetectionStatus_;
    public boolean hasTyreLockDetectionStatus() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    public int getTyreLockDetectionStatus() {
      return tyreLockDetectionStatus_;
    }
    
    // optional int32 tfaStatus = 11;
    public static final int TFASTATUS_FIELD_NUMBER = 11;
    private int tfaStatus_;
    public boolean hasTfaStatus() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    public int getTfaStatus() {
      return tfaStatus_;
    }
    
    // optional int32 placeholder1 = 12;
    public static final int PLACEHOLDER1_FIELD_NUMBER = 12;
    private int placeholder1_;
    public boolean hasPlaceholder1() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    public int getPlaceholder1() {
      return placeholder1_;
    }
    
    // optional int32 placeholder2 = 13;
    public static final int PLACEHOLDER2_FIELD_NUMBER = 13;
    private int placeholder2_;
    public boolean hasPlaceholder2() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    public int getPlaceholder2() {
      return placeholder2_;
    }
    
    private void initFields() {
      tireLocation_ = 0;
      tireTemperature_ = 0;
      tirePressure_ = 0;
      wuBatteryStatus_ = 0;
      fastPressureLossStatus_ = 0;
      tcTargetNominalPressure_ = 0;
      tyrePressureStatus_ = 0;
      tyreBurstStatus_ = 0;
      tyreOverTemperatureStatus_ = 0;
      tyreLockDetectionStatus_ = 0;
      tfaStatus_ = 0;
      placeholder1_ = 0;
      placeholder2_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, tireLocation_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, tireTemperature_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, tirePressure_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, wuBatteryStatus_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, fastPressureLossStatus_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, tcTargetNominalPressure_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, tyrePressureStatus_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, tyreBurstStatus_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, tyreOverTemperatureStatus_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(10, tyreLockDetectionStatus_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(11, tfaStatus_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(12, placeholder1_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt32(13, placeholder2_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, tireLocation_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, tireTemperature_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, tirePressure_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, wuBatteryStatus_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, fastPressureLossStatus_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, tcTargetNominalPressure_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, tyrePressureStatus_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, tyreBurstStatus_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, tyreOverTemperatureStatus_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, tyreLockDetectionStatus_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, tfaStatus_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, placeholder1_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, placeholder2_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static TireConditionItem parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static TireConditionItem parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static TireConditionItem parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static TireConditionItem parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static TireConditionItem parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static TireConditionItem parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static TireConditionItem parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static TireConditionItem parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static TireConditionItem parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static TireConditionItem parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(TireConditionItem prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements TireConditionItemOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return LCTireTemperatureAddition.internal_static_TireConditionItem_descriptor;
      }
      
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return LCTireTemperatureAddition.internal_static_TireConditionItem_fieldAccessorTable;
      }
      
      // Construct using com.navinfo.opentsp.platform.location.protocol.common.LCTireTemperatureAddition.TireConditionItem.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        tireLocation_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        tireTemperature_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        tirePressure_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        wuBatteryStatus_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        fastPressureLossStatus_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        tcTargetNominalPressure_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        tyrePressureStatus_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        tyreBurstStatus_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        tyreOverTemperatureStatus_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        tyreLockDetectionStatus_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        tfaStatus_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        placeholder1_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        placeholder2_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return TireConditionItem.getDescriptor();
      }
      
      public TireConditionItem getDefaultInstanceForType() {
        return TireConditionItem.getDefaultInstance();
      }
      
      public TireConditionItem build() {
        TireConditionItem result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private TireConditionItem buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        TireConditionItem result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public TireConditionItem buildPartial() {
        TireConditionItem result = new TireConditionItem(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.tireLocation_ = tireLocation_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.tireTemperature_ = tireTemperature_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.tirePressure_ = tirePressure_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.wuBatteryStatus_ = wuBatteryStatus_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.fastPressureLossStatus_ = fastPressureLossStatus_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.tcTargetNominalPressure_ = tcTargetNominalPressure_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.tyrePressureStatus_ = tyrePressureStatus_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.tyreBurstStatus_ = tyreBurstStatus_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.tyreOverTemperatureStatus_ = tyreOverTemperatureStatus_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.tyreLockDetectionStatus_ = tyreLockDetectionStatus_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.tfaStatus_ = tfaStatus_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.placeholder1_ = placeholder1_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.placeholder2_ = placeholder2_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof TireConditionItem) {
          return mergeFrom((TireConditionItem)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(TireConditionItem other) {
        if (other == TireConditionItem.getDefaultInstance()) return this;
        if (other.hasTireLocation()) {
          setTireLocation(other.getTireLocation());
        }
        if (other.hasTireTemperature()) {
          setTireTemperature(other.getTireTemperature());
        }
        if (other.hasTirePressure()) {
          setTirePressure(other.getTirePressure());
        }
        if (other.hasWuBatteryStatus()) {
          setWuBatteryStatus(other.getWuBatteryStatus());
        }
        if (other.hasFastPressureLossStatus()) {
          setFastPressureLossStatus(other.getFastPressureLossStatus());
        }
        if (other.hasTcTargetNominalPressure()) {
          setTcTargetNominalPressure(other.getTcTargetNominalPressure());
        }
        if (other.hasTyrePressureStatus()) {
          setTyrePressureStatus(other.getTyrePressureStatus());
        }
        if (other.hasTyreBurstStatus()) {
          setTyreBurstStatus(other.getTyreBurstStatus());
        }
        if (other.hasTyreOverTemperatureStatus()) {
          setTyreOverTemperatureStatus(other.getTyreOverTemperatureStatus());
        }
        if (other.hasTyreLockDetectionStatus()) {
          setTyreLockDetectionStatus(other.getTyreLockDetectionStatus());
        }
        if (other.hasTfaStatus()) {
          setTfaStatus(other.getTfaStatus());
        }
        if (other.hasPlaceholder1()) {
          setPlaceholder1(other.getPlaceholder1());
        }
        if (other.hasPlaceholder2()) {
          setPlaceholder2(other.getPlaceholder2());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              tireLocation_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              tireTemperature_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              tirePressure_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              wuBatteryStatus_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              fastPressureLossStatus_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              tcTargetNominalPressure_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              tyrePressureStatus_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              tyreBurstStatus_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              tyreOverTemperatureStatus_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              tyreLockDetectionStatus_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              tfaStatus_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              placeholder1_ = input.readInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              placeholder2_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional int32 tireLocation = 1;
      private int tireLocation_ ;
      public boolean hasTireLocation() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getTireLocation() {
        return tireLocation_;
      }
      public Builder setTireLocation(int value) {
        bitField0_ |= 0x00000001;
        tireLocation_ = value;
        onChanged();
        return this;
      }
      public Builder clearTireLocation() {
        bitField0_ = (bitField0_ & ~0x00000001);
        tireLocation_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 tireTemperature = 2;
      private int tireTemperature_ ;
      public boolean hasTireTemperature() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getTireTemperature() {
        return tireTemperature_;
      }
      public Builder setTireTemperature(int value) {
        bitField0_ |= 0x00000002;
        tireTemperature_ = value;
        onChanged();
        return this;
      }
      public Builder clearTireTemperature() {
        bitField0_ = (bitField0_ & ~0x00000002);
        tireTemperature_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 tirePressure = 3;
      private int tirePressure_ ;
      public boolean hasTirePressure() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getTirePressure() {
        return tirePressure_;
      }
      public Builder setTirePressure(int value) {
        bitField0_ |= 0x00000004;
        tirePressure_ = value;
        onChanged();
        return this;
      }
      public Builder clearTirePressure() {
        bitField0_ = (bitField0_ & ~0x00000004);
        tirePressure_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 wuBatteryStatus = 4;
      private int wuBatteryStatus_ ;
      public boolean hasWuBatteryStatus() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getWuBatteryStatus() {
        return wuBatteryStatus_;
      }
      public Builder setWuBatteryStatus(int value) {
        bitField0_ |= 0x00000008;
        wuBatteryStatus_ = value;
        onChanged();
        return this;
      }
      public Builder clearWuBatteryStatus() {
        bitField0_ = (bitField0_ & ~0x00000008);
        wuBatteryStatus_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 fastPressureLossStatus = 5;
      private int fastPressureLossStatus_ ;
      public boolean hasFastPressureLossStatus() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public int getFastPressureLossStatus() {
        return fastPressureLossStatus_;
      }
      public Builder setFastPressureLossStatus(int value) {
        bitField0_ |= 0x00000010;
        fastPressureLossStatus_ = value;
        onChanged();
        return this;
      }
      public Builder clearFastPressureLossStatus() {
        bitField0_ = (bitField0_ & ~0x00000010);
        fastPressureLossStatus_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 tcTargetNominalPressure = 6;
      private int tcTargetNominalPressure_ ;
      public boolean hasTcTargetNominalPressure() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public int getTcTargetNominalPressure() {
        return tcTargetNominalPressure_;
      }
      public Builder setTcTargetNominalPressure(int value) {
        bitField0_ |= 0x00000020;
        tcTargetNominalPressure_ = value;
        onChanged();
        return this;
      }
      public Builder clearTcTargetNominalPressure() {
        bitField0_ = (bitField0_ & ~0x00000020);
        tcTargetNominalPressure_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 tyrePressureStatus = 7;
      private int tyrePressureStatus_ ;
      public boolean hasTyrePressureStatus() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public int getTyrePressureStatus() {
        return tyrePressureStatus_;
      }
      public Builder setTyrePressureStatus(int value) {
        bitField0_ |= 0x00000040;
        tyrePressureStatus_ = value;
        onChanged();
        return this;
      }
      public Builder clearTyrePressureStatus() {
        bitField0_ = (bitField0_ & ~0x00000040);
        tyrePressureStatus_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 tyreBurstStatus = 8;
      private int tyreBurstStatus_ ;
      public boolean hasTyreBurstStatus() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public int getTyreBurstStatus() {
        return tyreBurstStatus_;
      }
      public Builder setTyreBurstStatus(int value) {
        bitField0_ |= 0x00000080;
        tyreBurstStatus_ = value;
        onChanged();
        return this;
      }
      public Builder clearTyreBurstStatus() {
        bitField0_ = (bitField0_ & ~0x00000080);
        tyreBurstStatus_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 tyreOverTemperatureStatus = 9;
      private int tyreOverTemperatureStatus_ ;
      public boolean hasTyreOverTemperatureStatus() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      public int getTyreOverTemperatureStatus() {
        return tyreOverTemperatureStatus_;
      }
      public Builder setTyreOverTemperatureStatus(int value) {
        bitField0_ |= 0x00000100;
        tyreOverTemperatureStatus_ = value;
        onChanged();
        return this;
      }
      public Builder clearTyreOverTemperatureStatus() {
        bitField0_ = (bitField0_ & ~0x00000100);
        tyreOverTemperatureStatus_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 tyreLockDetectionStatus = 10;
      private int tyreLockDetectionStatus_ ;
      public boolean hasTyreLockDetectionStatus() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      public int getTyreLockDetectionStatus() {
        return tyreLockDetectionStatus_;
      }
      public Builder setTyreLockDetectionStatus(int value) {
        bitField0_ |= 0x00000200;
        tyreLockDetectionStatus_ = value;
        onChanged();
        return this;
      }
      public Builder clearTyreLockDetectionStatus() {
        bitField0_ = (bitField0_ & ~0x00000200);
        tyreLockDetectionStatus_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 tfaStatus = 11;
      private int tfaStatus_ ;
      public boolean hasTfaStatus() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      public int getTfaStatus() {
        return tfaStatus_;
      }
      public Builder setTfaStatus(int value) {
        bitField0_ |= 0x00000400;
        tfaStatus_ = value;
        onChanged();
        return this;
      }
      public Builder clearTfaStatus() {
        bitField0_ = (bitField0_ & ~0x00000400);
        tfaStatus_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 placeholder1 = 12;
      private int placeholder1_ ;
      public boolean hasPlaceholder1() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      public int getPlaceholder1() {
        return placeholder1_;
      }
      public Builder setPlaceholder1(int value) {
        bitField0_ |= 0x00000800;
        placeholder1_ = value;
        onChanged();
        return this;
      }
      public Builder clearPlaceholder1() {
        bitField0_ = (bitField0_ & ~0x00000800);
        placeholder1_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 placeholder2 = 13;
      private int placeholder2_ ;
      public boolean hasPlaceholder2() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      public int getPlaceholder2() {
        return placeholder2_;
      }
      public Builder setPlaceholder2(int value) {
        bitField0_ |= 0x00001000;
        placeholder2_ = value;
        onChanged();
        return this;
      }
      public Builder clearPlaceholder2() {
        bitField0_ = (bitField0_ & ~0x00001000);
        placeholder2_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:TireConditionItem)
    }
    
    static {
      defaultInstance = new TireConditionItem(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:TireConditionItem)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_TireTemperatureAddition_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_TireTemperatureAddition_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_TireConditionItem_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_TireConditionItem_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n4core/proto/common/java/TireTemperature" +
      "Addition.proto\"\326\001\n\027TireTemperatureAdditi" +
      "on\022\021\n\talarmSign\030\001 \001(\005\022\016\n\006status\030\002 \001(\005\022\020\n" +
      "\010latitude\030\003 \001(\005\022\021\n\tlongitude\030\004 \001(\005\022\016\n\006he" +
      "ight\030\005 \001(\005\022\021\n\tdirection\030\006 \001(\005\022\017\n\007gpsTime" +
      "\030\007 \001(\003\022\020\n\010gpsSpeed\030\010 \001(\005\022-\n\021tireConditio" +
      "nItem\030\t \003(\0132\022.TireConditionItem\"\352\002\n\021Tire" +
      "ConditionItem\022\024\n\014tireLocation\030\001 \001(\005\022\027\n\017t" +
      "ireTemperature\030\002 \001(\005\022\024\n\014tirePressure\030\003 \001" +
      "(\005\022\027\n\017wuBatteryStatus\030\004 \001(\005\022\036\n\026fastPress",
      "ureLossStatus\030\005 \001(\005\022\037\n\027tcTargetNominalPr" +
      "essure\030\006 \001(\005\022\032\n\022tyrePressureStatus\030\007 \001(\005" +
      "\022\027\n\017tyreBurstStatus\030\010 \001(\005\022!\n\031tyreOverTem" +
      "peratureStatus\030\t \001(\005\022\037\n\027tyreLockDetectio" +
      "nStatus\030\n \001(\005\022\021\n\ttfaStatus\030\013 \001(\005\022\024\n\014plac" +
      "eholder1\030\014 \001(\005\022\024\n\014placeholder2\030\r \001(\005BR\n5" +
      "com.navinfo.opentsp.platform.location.pr" +
      "otocol.commonB\031LCTireTemperatureAddition"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_TireTemperatureAddition_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_TireTemperatureAddition_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_TireTemperatureAddition_descriptor,
              new String[] { "AlarmSign", "Status", "Latitude", "Longitude", "Height", "Direction", "GpsTime", "GpsSpeed", "TireConditionItem", },
              TireTemperatureAddition.class,
              TireTemperatureAddition.Builder.class);
          internal_static_TireConditionItem_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_TireConditionItem_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_TireConditionItem_descriptor,
              new String[] { "TireLocation", "TireTemperature", "TirePressure", "WuBatteryStatus", "FastPressureLossStatus", "TcTargetNominalPressure", "TyrePressureStatus", "TyreBurstStatus", "TyreOverTemperatureStatus", "TyreLockDetectionStatus", "TfaStatus", "Placeholder1", "Placeholder2", },
              TireConditionItem.class,
              TireConditionItem.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
