server.port=18099

# \u4F4D\u7F6E\u4E91\u76F8\u5173
#CloudServerIp=10.30.50.151
CloudServerIp=10.30.10.13
CloudServerPort=30503
ProcessServerIp=10.30.50.152
CloudServerUserName=server
passWord=123456
areaCode=132700
version=2.0

# redis
spring.redis.host=10.30.50.151
spring.redis.password=
spring.redis.port=6399
spring.redis.database=8
spring.redis.pool.max-idle=8
spring.redis.pool.min-idle=0
spring.redis.pool.max-active=8
spring.redis.pool.max-wait=10000

# security
security.basic.enabled=false

# datasource
spring.datasource.url=jdbc:mysql://10.30.50.153:3306/product_manage_0724
spring.datasource.username=dongfeng153
spring.datasource.password=6DuQBNlfa6dTwaY2gQQd8rPk
spring.datasource.driverClassName=com.mysql.jdbc.Driver
spring.datasource.tomcat.max-active=200
spring.datasource.tomcat.max-idle=8
spring.datasource.tomcat.min-idle=8
spring.datasource.tomcat.initial-size=10
spring.datasource.tomcat.maxWait=60000
spring.datasource.tomcat.time-between-eviction-runs-millis=60000
spring.datasource.tomcat.min-evictable-idle-time-millis=300000
spring.datasource.tomcat.validation-query=SELECT 1;
spring.datasource.tomcat.test-while-idle=true
spring.datasource.tomcat.test-on-borrow=false
spring.datasource.tomcat.test-on-return=false

# jpa
spring.jpa.database=MYSQL
spring.jpa.database-platform=org.hibernate.dialect.MySQL5Dialect
spring.jpa.show-sql=true
spring.jta.bitronix.datasource.allow-local-transactions=true

# kafka
#opentsp.kafka.bootstrap.servers=zkpsy1:9092,zkpsy2:9092,zkpsy3:9092
opentsp.kafka.bootstrap.servers=10.30.10.11:19092,10.30.10.12:19092,10.30.10.13:19092
opentsp.kafka.producer.key.serializer.class=org.apache.kafka.common.serialization.StringSerializer
opentsp.kafka.producer.value.serializer.class=com.navinfo.dongfeng.terminal.comm.kafka.serializers.KafkaJsonSerializer
opentsp.kafka.producer.batch.size=200
opentsp.kafka.producer.buffer.memory=33554432
opentsp.kafka.producer.request.timeout.ms=30000
opentsp.kafka.producer.retries=0
opentsp.kafka.producer.linger.ms=1
opentsp.kafka.producer.qq.poscan.topic=qq_poscan_pkt
#opentsp.kafka.producer.qq.online.topic=qq_online_pkt

# \u670D\u52A1\u6CE8\u518C\u53D1\u73B0\u4E2D\u5FC3\u914D\u7F6E
eureka.client.registerWithEureka = true
eureka.client.fetchRegistry = true
eureka.client.serviceUrl.defaultZone=http://10.30.50.152:11112/eureka/
eureka.client.registryFetchIntervalSeconds=10
eureka.instance.preferIpAddress = false
eureka.instance.leaseRenewalIntervalInSeconds=10
eureka.instance.leaseExpirationDurationInSeconds=30
# \u670D\u52A1\u540D\u79F0
spring.application.name=cmd
# \u63A5\u53E3\u8D85\u65F6\u65F6\u95F4\uFF0C\u5355\u4F4D\u79D2\uFF0C\u9ED8\u8BA420\u79D2
controller.timeout=20
# controller\u4EE3\u7406\u524D\u7F00
controller.prefix=/dongfeng/${spring.application.name}

# \u6307\u4EE4redis\u5B58\u6D3B\u65F6\u95F4
redis.cmd.liveTime=600000

#log\u7EA7\u522B
logging.level.com: INFO

feign.hystrix.enabled=false
ribbon.MaxConnectionsPerHost=2000
ribbon.MaxTotalConnections=20000
ribbon.ConnectTimeout=30000
ribbon.ReadTimeout=30000
ribbon.PoolMaxThreads=2000